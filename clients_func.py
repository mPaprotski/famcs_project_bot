from telebot import types
from config import SELLERS, PRICES, ITEMS
from sheets import get_sheet
import re

def escape_markdown(text):
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown –≤ —Ç–µ–∫—Å—Ç–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram.
    –ó–∞–º–µ–Ω—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, *, _, [, ]) –Ω–∞ –∏—Ö —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    Args:
        text (str): –í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    Returns:
        str: –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø—Ä–∏–≥–æ–¥–Ω—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram.
    """
    escape_chars = r'\*_`\[\]()~>#+\-=|{}.!'
    return re.sub(r'([%s])' % re.escape(escape_chars), r'\\\1', text)

def update_order_status(row_index, status):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ Google Sheets.
    –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ —Å—Ç–æ–ª–±–µ—Ü W (23-–π —Å—Ç–æ–ª–±–µ—Ü) –¥–ª—è —Å—Ç—Ä–æ–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º.
    
    Args:
        row_index (int): –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –≤ Google Sheets (–Ω–∞—á–∏–Ω–∞—è —Å 1).
        status (str): –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ("–û–ø–ª–∞—á–µ–Ω–æ", "–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞).
    """
    sheet = get_sheet()
    sheet.update_cell(row_index, 23, status)

def show_clients_for_seller(bot, chat_id, tg_username, status_filter=None):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Å—Ç–∞—Ç—É—Å—É.
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞, –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü—É, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ (–§–ò–û, Telegram, —Ç–µ–ª–µ—Ñ–æ–Ω, —Ç–æ–≤–∞—Ä—ã, —Å—É–º–º–∞, —Å—Ç–∞—Ç—É—Å).
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Ç–∞—Ç—É—Å—É –∑–∞–∫–∞–∑–∞ ("–û–ø–ª–∞—á–µ–Ω–æ", "–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" –∏–ª–∏ None –¥–ª—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤).
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä TeleBot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        chat_id (int): ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        tg_username (str): Telegram-username –ø—Ä–æ–¥–∞–≤—Ü–∞.
        status_filter (str, optional): –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É –∑–∞–∫–∞–∑–∞ ("–û–ø–ª–∞—á–µ–Ω–æ", "–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" –∏–ª–∏ None).
    """
    sheet = get_sheet()
    rows = sheet.get_all_records()

    if tg_username not in SELLERS:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü.")
        return

    seller_index = SELLERS.index(tg_username)
    found = False

    for i, row in enumerate(rows):
        if i % len(SELLERS) != seller_index:
            continue

        if status_filter and row.get('–°—Ç–∞—Ç—É—Å', '') != status_filter:
            continue

        items, total_price = format_order(row)
        if not items:
            continue

        found = True
        text = (
            f"üë§ <b>–§–ò–û:</b> {row['–§–ò–û']}\n"
            f"üìû <u>–¢–µ–ª–µ–≥—Ä–∞–º:</u> {row['–¢–ì (@example)']}\n"
            f"üì± <u>–¢–µ–ª–µ—Ñ–æ–Ω:</u> {row['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']}\n"
            f"üõç <u><b>–ó–∞–∫–∞–∑:</b></u>\n"
            f"<pre>{'\n'.join(items)}</pre>\n"
            f"üí∞<u><i>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</i></u> {total_price} —Ä—É–±.\n"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> {row['–°—Ç–∞—Ç—É—Å'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}"
        )

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –û–ø–ª–∞—á–µ–Ω–æ", callback_data=f"paid_{i+2}"))
        markup.add(types.InlineKeyboardButton("üì¶ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", callback_data=f"delivered_{i+2}"))
        markup.add(types.InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data=f"reset_{i+2}"))
        bot.send_message(chat_id, text, parse_mode='HTML', reply_markup=markup)

    if not found:
        message = (
            "–ù–∞ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤."
            if status_filter is None else
            f"–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '{status_filter}'."
        )
        bot.send_message(chat_id, message)

def format_order(row):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã Google Sheets.
    –°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–æ–≤ (–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–≤–µ—Ç, —Ä–∞–∑–º–µ—Ä, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Å—Ç–æ–∏–º–æ—Å—Ç—å) –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.
    
    Args:
        row (dict): –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∏ –∏–∑ Google Sheets.
    
    Returns:
        tuple: –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞.
    """
    total_price = 0
    lines = []

    def add_item(item):
        """
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∑–∞–∫–∞–∑–µ.
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –ø–æ–ª—É—á–∞–µ—Ç —Ü–≤–µ—Ç –∏ —Ä–∞–∑–º–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å), –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫.
        
        Args:
            item (dict): –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ITEMS.
        """
        count = row.get(item['count_key'])
        if count and str(count).isdigit() and int(count) > 0:
            count = int(count)
            color = row.get(item['color_key'], '').strip() if item['color_key'] else ''
            size = row.get(item['size_key'], '').strip() if item['size_key'] else ''
            price = PRICES.get(item['price_key'], 0)
            item_sum = count * price
            nonlocal total_price
            total_price += item_sum
            parts = [item['name']]
            if color: parts.append(color)
            if size: parts.append(size)
            label = ', '.join(parts)
            lines.append(f"  - {label} x{count} ‚Äî {item_sum} —Ä—É–±.")

    for item in ITEMS:
        add_item(item)

    return lines, total_price