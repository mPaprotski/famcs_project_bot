from telebot import types
from config import SELLERS, PRICES
from sheets import get_sheet
import re

def escape_markdown(text):
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown –≤ —Ç–µ–∫—Å—Ç–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram.
    """
    escape_chars = r'\*_`\[\]()~>#+\-=|{}.!'
    return re.sub(r'([%s])' % re.escape(escape_chars), r'\\\1', text)

def update_order_status(row_index, status):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ Google Sheets.
    """
    sheet = get_sheet()
    sheet.update_cell(row_index, 23, status)  # –°—Ç–æ–ª–±–µ—Ü W (23-–π —Å—Ç–æ–ª–±–µ—Ü) –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞

def show_clients_for_seller(bot, chat_id, tg_username):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞.
    """
    sheet = get_sheet()
    rows = sheet.get_all_records()

    if tg_username not in SELLERS:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü.")
        return

    seller_index = SELLERS.index(tg_username)
    found = False

    for i, row in enumerate(rows):
        if i % len(SELLERS) != seller_index:
            continue

        items, total_price = format_order(row)
        if not items:
            continue

        found = True
        text = (
            f"üë§ <b>–§–ò–û:</b> {row['–§–ò–û']}\n"
            f"üìû <u>–¢–µ–ª–µ–≥—Ä–∞–º:</u> {row['–¢–ì (@example)']}\n"
            f"üì± <u>–¢–µ–ª–µ—Ñ–æ–Ω:</u> {row['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']}\n"
            f"üõç <u><b>–ó–∞–∫–∞–∑:</b></u>\n"
            f"<pre>{'\n'.join(items)}</pre>\n"
            f"üí∞<u><i>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</i></u> {total_price} —Ä—É–±.\n"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> {row['–°—Ç–∞—Ç—É—Å']}"
        )

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –û–ø–ª–∞—á–µ–Ω–æ", callback_data=f"paid_{i+2}"))
        markup.add(types.InlineKeyboardButton("üì¶ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", callback_data=f"delivered_{i+2}"))
        bot.send_message(chat_id, text, parse_mode='HTML', reply_markup=markup)

    if not found:
        bot.send_message(chat_id, "–ù–∞ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤.")

def format_order(row):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã.
    """
    total_price = 0
    lines = []

    def add_item(title, color_key, size_key, count_key):
        """
        –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–∞.
        """
        count = row.get(count_key)
        if count and str(count).isdigit() and int(count) > 0:
            count = int(count)
            color = row.get(color_key, '').strip() if color_key else ''
            size = row.get(size_key, '').strip() if size_key else ''
            price = PRICES.get(title, 0)
            item_sum = count * price
            nonlocal total_price
            total_price += item_sum
            parts = [title]
            if color: parts.append(color)
            if size: parts.append(size)
            label = ', '.join(parts)
            lines.append(f"  - {label} x{count} ‚Äî {item_sum} —Ä—É–±.")

    add_item('–§—É—Ç–±–æ–ª–∫–∞', '–†–∞—Å—Ü–≤–µ—Ç–∫–∞ —Ñ—É—Ç–±–æ–ª–∫–∏', '–†–∞–∑–º–µ—Ä —Ñ—É—Ç–±–æ–ª–∫–∏', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—É—Ç–±–æ–ª–∫–∞')
    add_item('–õ–æ–Ω–≥—Å–ª–∏–≤', '–†–∞—Å—Ü–≤–µ—Ç–∫–∞ –ª–æ–Ω–≥—Å–ª–∏–≤–∞', '–†–∞–∑–º–µ—Ä –ª–æ–Ω–≥—Å–ª–∏–≤–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–Ω–≥—Å–ª–∏–≤')
    add_item('–•—É–¥–∏', '–†–∞—Å—Ü–≤–µ—Ç–∫–∞ —Ö—É–¥–∏', '–†–∞–∑–º–µ—Ä —Ö—É–¥–∏', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö—É–¥–∏')
    add_item('–ó–∏–ø-—Ö—É–¥–∏', '–†–∞—Å—Ü–≤–µ—Ç–∫–∞ –∑–∏–ø-—Ö—É–¥–∏', '–†–∞–∑–º–µ—Ä –∑–∏–ø-—Ö—É–¥–∏', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∏–ø-—Ö—É–¥–∏')
    add_item('–®–æ–ø–ø–µ—Ä –±–µ–ª—ã–π', None, None, '–®–æ–ø–ø–µ—Ä –±–µ–ª—ã–π')
    add_item('–®–æ–ø–ø–µ—Ä —á–µ—Ä–Ω—ã–π', None, None, '–®–æ–ø–ø–µ—Ä —á–µ—Ä–Ω—ã–π')
    add_item('–ö—Ä—É–∂–∫–∞', None, None, '–ö—Ä—É–∂–∫–∞')
    add_item('–ó–Ω–∞—á–æ–∫', None, None, '–ó–Ω–∞—á–æ–∫')
    add_item('–ë–ª–æ–∫–Ω–æ—Ç –±–µ–ª—ã–π', None, None, '–ë–ª–æ–∫–Ω–æ—Ç –±–µ–ª—ã–π')
    add_item('–ë–ª–æ–∫–Ω–æ—Ç —á–µ—Ä–Ω—ã–π', None, None, '–ë–ª–æ–∫–Ω–æ—Ç —á–µ—Ä–Ω—ã–π')

    return lines, total_price